// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "shift+cmd+a",
    "command": "editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "shift+alt+a",
    "command": "-editor.action.blockComment",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+e",
    "command": "-actions.findWithSelection"
  },
  {
    "key": "cmd+e",
    "command": "-workbench.action.openPreviousEditorFromHistory",
    "when": "inQuickOpen"
  },
  {
    "key": "cmd+e",
    "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
  },
  {
    "key": "ctrl+f",
    "command": "explorer.newFile",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+cmd+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+n",
    "command": "-workbench.action.files.newUntitledFile"
  },
  {
    "key": "cmd+s",
    "command": "-workbench.action.files.saveAll"
  },
  {
    "key": "shift+cmd+w",
    "command": "-workbench.action.closeWindow"
  },
  {
    "key": "shift+cmd+w",
    "command": "workbench.action.closeAllEditors"
  },
  {
    "key": "cmd+k cmd+w",
    "command": "-workbench.action.closeAllEditors"
  },
  {
    "key": "shift+alt+d",
    "command": "-editor.detectLanguage",
    "when": "editorTextFocus && !notebookEditable"
  },
  {
    "key": "shift+alt+d",
    "command": "-notebook.cell.detectLanguage",
    "when": "notebookCellEditable && notebookEditable"
  },
  {
    "key": "cmd+k ctrl+alt+cmd+q",
    "command": "-workbench.action.splitEditorRight"
  },
  {
    "key": "shift+alt+d",
    "command": "workbench.action.splitEditorToRightGroup"
  },
  {
    "key": "shift+alt+s",
    "command": "workbench.action.joinAllGroups"
  },
  {
    "key": "f3",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "f3",
    "command": "-editor.action.nextMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "f3",
    "command": "-list.find",
    "when": "listFocus && listSupportsFind"
  },
  {
    "key": "f3",
    "command": "bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+cmd+k",
    "command": "-bookmarks.toggle",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+f3",
    "command": "-editor.action.nextSelectionMatchFindAction",
    "when": "editorFocus"
  },
  {
    "key": "cmd+f3",
    "command": "bookmarks.listFromAllFiles"
  },
  {
    "key": "cmd+t",
    "command": "-git.sync",
    "when": "!operationInProgress"
  },
  {
    "key": "shift+cmd+b",
    "command": "-workbench.action.tasks.build",
    "when": "taskCommandsRegistered"
  },
  {
    "key": "shift+cmd+b",
    "command": "typescript.goToSourceDefinition"
  },
  {
    "key": "cmd+1",
    "command": "-workbench.action.toggleSidebarVisibility",
    "when": "!editorFocus"
  },
  {
    "key": "alt+t",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "!editorFocus"
  },
  {
    "key": "ctrl+-",
    "command": "-workbench.action.navigateBack",
    "when": "canNavigateBack"
  },
  {
    "key": "cmd+down",
    "command": "widgetNavigation.focusNext",
    "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'"
  },
  {
    "key": "cmd+down",
    "command": "-widgetNavigation.focusNext",
    "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'"
  },
  {
    "key": "ctrl+n",
    "command": "search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "cmd+down",
    "command": "-search.focus.nextInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
  },
  {
    "key": "ctrl+p",
    "command": "search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "cmd+up",
    "command": "-search.focus.previousInputBox",
    "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
  },
  {
    "key": "cmd+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "cmd+b",
    "command": "editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
  },
  {
    "key": "f9",
    "command": "-editor.debug.action.toggleBreakpoint",
    "when": "debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus"
  },
  {
    "key": "cmd+d",
    "command": "workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "cmd+n",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f10",
    "command": "-workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "cmd+o",
    "command": "workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+f11",
    "command": "-workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "cmd+i",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "cmd+r",
    "command": "workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.continue",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "cmd+s",
    "command": "workbench.action.debug.stop",
    "when": "inDebugMode && !focusedSessionIsAttach"
  },
  {
    "key": "shift+f5",
    "command": "-workbench.action.debug.stop",
    "when": "inDebugMode && !focusedSessionIsAttach"
  },
  {
    "key": "cmd+e",
    "command": "editor.debug.action.selectionToRepl"
  },
  {
    "key": "cmd+t",
    "command": "workbench.debug.viewlet.action.toggleBreakpointsActivatedAction"
  },
  {
    "key": "ctrl+r",
    "command": "renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "enter",
    "command": "-renameFile",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "alt+c",
    "command": "workbench.action.closeSidebar"
  },
  {
    "key": "alt+f",
    "command": "workbench.action.focusSideBar"
  },
  {
    "key": "cmd+0",
    "command": "-workbench.action.focusSideBar"
  },
  {
    "key": "ctrl+q",
    "command": "workbench.action.focusActiveEditorGroup"
  },
  {
    "key": "ctrl+d",
    "command": "explorer.newFolder",
    "when": "!editorFocus"
  }
]